name: Infrastructure Automation and Deployment

on:
  push:
    branches: [ main ]

jobs:
  provision-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-west-2
      TF_WORKING_DIR: ./TERRA
      ANSIBLE_DIR: ./ANSIB

    steps:
    - name: ✅ Checkout repo
      uses: actions/checkout@v3

    - name: 🔐 Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 🔧 Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2

    - name: 📂 Terraform Initialisation
      run: terraform init
      working-directory: ${{ env.TF_WORKING_DIR }}
      

    - name: 🧹 Terraform Format Check
      run: terraform fmt 
      working-directory: ${{ env.TF_WORKING_DIR }}

    - name: 🔍 Terraform Validate
      run: terraform validate
      working-directory: ${{ env.TF_WORKING_DIR }}

    - name: 📊 Terraform Plan
      run: terraform plan
      working-directory: ${{ env.TF_WORKING_DIR }}

    - name: 🚀 Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ${{ env.TF_WORKING_DIR }}

    - name: 📦 Capture Terraform Outputs
      run: terraform output -json
      working-directory: ${{ env.TF_WORKING_DIR }}

    - name: 🔑 Inject SSH Key
      run: echo "$SSH_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
      env:
        SSH_KEY: ${{ secrets.AWS_EC2_PRIVATE_KEY }}

    - name: 🐍 Install Python, Ansible & Collections
      run: |
        pip install ansible
        ansible-galaxy collection install ansible.utils
        ansible-galaxy collection list | grep ansible.utils || {
          echo "❌ Collection ansible.utils not found after install."
          exit 1
        }

    - name: ⚙️ Create ansible.cfg
      run: |
        echo "[defaults]" > ansible.cfg
        echo "inventory = aws_ec2.yaml" >> ansible.cfg
        echo "host_key_checking = False" >> ansible.cfg

    - name: 📂 Run Ansible Playbook with Dynamic Inventory
      run: |
        echo "Running Ansible Playbook..."
        ansible-playbook -i aws_ec2.yaml playbook.yaml
      shell: /usr/bin/bash -e {0}
      env:
        AWS_REGION: ${{ env.AWS_REGION }}
        AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_WORKING_DIR: ${{ env.TF_WORKING_DIR }}
        ANSIBLE_DIR: ${{ env.ANSIBLE_DIR }}
