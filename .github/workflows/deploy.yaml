name: Infrastructure Automation and Deployment

on:
  push:
    branches: [ main ]

jobs:
  provision-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-west-2
      TF_WORKING_DIR: ./TERRA
      ANSIBLE_DIR: ./ANSIB
      AWS_DEFAULT_REGION: eu-west-2
      ANSIBLE_COLLECTIONS_PATH: /home/runner/.ansible/collections:/usr/share/ansible/collections
      ANSIBLE_HOST_KEY_CHECKING: false
      ANSIBLE_INVENTORY: aws_ec2.yaml
      ANSIBLE_CONFIG: ./ansible.cfg

    steps:
    - name: ✅ Checkout repo
      uses: actions/checkout@v3

    - name: 🔐 Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 🔧 Setup Terraform CLI
      uses: hashicorp/setup-terraform@v3

    - name: 📦 Terraform Initialisation
      run: terraform -chdir=${{ env.TF_WORKING_DIR }} init

    - name: 🧹 Terraform Format Check
      run: terraform -chdir=${{ env.TF_WORKING_DIR }} fmt 

    - name: 🕵️ Terraform Validate
      run: terraform -chdir=${{ env.TF_WORKING_DIR }} validate

    - name: 📊 Terraform Plan
      run: terraform -chdir=${{ env.TF_WORKING_DIR }} plan

    - name: 🚀 Terraform Apply
      run: terraform -chdir=${{ env.TF_WORKING_DIR }} apply -auto-approve

    - name: 📦 Capture Terraform Outputs
      id: tfoutputs
      run: terraform -chdir=${{ env.TF_WORKING_DIR }} output -json > outputs.json

    - name: 🛠 Install Ansible & Required Collections
      run: |
        pip install --user ansible
        export PATH=$HOME/.local/bin:$PATH
        export ANSIBLE_COLLECTIONS_PATHS=$HOME/.ansible/collections:/usr/share/ansible/collections
        ansible-galaxy collection install ansible.utils
        ansible-galaxy collection list | grep ansible.utils || {
          echo "❌ Collection not found"
          exit 1
        }

       
    - name: ⚙️ Create ansible.cfg
      run: |
        echo '[defaults]' > ansible.cfg
        echo "collection_paths = $ANSIBLE_COLLECTIONS_PATH" >> ansible.cfg
        echo "deprecation_warnings = False" >> ansible.cfg

    - name: 📦 Run Ansible Playbook with Dynamic Inventory
      working-directory: ${{ env.ANSIBLE_DIR }}
      env:
        ANSIBLE_HOST_KEY_CHECKING: false
      run: |
        echo "Running Ansible Playbook..."
        ansible-playbook -i aws_ec2.yaml playbook.yaml
